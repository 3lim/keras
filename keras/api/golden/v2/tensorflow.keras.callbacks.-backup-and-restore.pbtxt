path: "tensorflow.keras.callbacks.BackupAndRestore"
tf_class {
  is_instance: "<class \'keras.callbacks.BackupAndRestore\'>"
  is_instance: "<class \'keras.callbacks.Callback\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "backup_callbacks"
    mtype: "<type \'property\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'backup_dir\', \'save_freq\', \'delete_checkpoint\', \'save_before_preemption\', \'save_callbacks\'], varargs=None, keywords=None, defaults=[\'epoch\', \'True\', \'False\', \'False\'], "
  }
  member_method {
    name: "get_state"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "load_state"
    argspec: "args=[\'self\', \'backup_fname\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "on_batch_begin"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_batch_end"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_epoch_begin"
    argspec: "args=[\'self\', \'epoch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_epoch_end"
    argspec: "args=[\'self\', \'epoch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_predict_batch_begin"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_predict_batch_end"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_predict_begin"
    argspec: "args=[\'self\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_predict_end"
    argspec: "args=[\'self\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_test_batch_begin"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_test_batch_end"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_test_begin"
    argspec: "args=[\'self\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_test_end"
    argspec: "args=[\'self\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_train_batch_begin"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_train_batch_end"
    argspec: "args=[\'self\', \'batch\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_train_begin"
    argspec: "args=[\'self\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "on_train_end"
    argspec: "args=[\'self\', \'logs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "save_state"
    argspec: "args=[\'self\', \'backup_fname\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "set_model"
    argspec: "args=[\'self\', \'model\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "set_params"
    argspec: "args=[\'self\', \'params\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "set_state"
    argspec: "args=[\'self\', \'state\'], varargs=None, keywords=None, defaults=None"
  }
}
